# Copyright (C) 2020-2021 Simon Josefsson
#
# This file is part of GNU Libidn.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

stages:
 - quick
 - build
 - test

Quick-Debian-testing:
  image: $CI_REGISTRY/libidn/build-images:libidn-quick-Debian-testing
  stage: quick
  script:
  - time ./bootstrap --skip-po
  - time ./configure --disable-doc || (cat config.log; exit 1)
  - time make syntax-check
  - time make V=1
  - time make check || (find . -name test-suite.log -exec cat {} +; exit 1)

Quick-Alpine:
  image: $CI_REGISTRY/libidn/build-images:libidn-quick-Alpine
  stage: build # it wasn't very quick...
  script:
  - time ./bootstrap --skip-po
  - time ./configure --disable-doc || (cat config.log; exit 1)
  - time make syntax-check
  - time make V=1
  - time make check || (find . -name test-suite.log -exec cat {} +; exit 1)

Debian stable:
  image: $CI_REGISTRY/libidn/build-images:libidn-Debian-stable
  stage: build
  script:
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-java || (cat config.log; exit 1)
  - time make syntax-check
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - time make dist
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz

Debian oldstable:
  image: $CI_REGISTRY/libidn/build-images:libidn-Debian-oldstable
  stage: build
  script:
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-java || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - time make dist
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz

Debian testing:
  image: $CI_REGISTRY/libidn/build-images:libidn-Debian-testing
  stage: build
  script:
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-java || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - time make distcheck
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz

Fedora latest:
  image: $CI_REGISTRY/libidn/build-images:libidn-Fedora-latest
  stage: build
  script:
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-java || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - time make distcheck
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz

Ubuntu latest:
  image: $CI_REGISTRY/libidn/build-images:libidn-Ubuntu-latest
  stage: build
  script:
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-java || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - time make distcheck
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz
  artifacts:
    expire_in: 2 weeks
    when: on_failure
    paths:
    - ./*.log
    - tests/*.log

Debian oldoldstable:
  image: debian:oldoldstable
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make gcc
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - time ../configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Alpine:
  image: alpine:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - apk update
  - apk add build-base
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

ArchLinux:
  image: archlinux:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - pacman -Sy --noconfirm make gcc diffutils
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - time ../configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Fedora:
  image: fedora:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - dnf -y install make gcc diffutils valgrind
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

CentOS7:
  image: centos:7
  stage: test
  needs: [Debian stable]
  before_script:
  - yum -y install make gcc diffutils valgrind
  script:
  - tar xfa libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

CentOS8:
  image: centos:8
  stage: test
  needs: [Debian stable]
  before_script:
  - dnf -y install make gcc diffutils valgrind
  script:
  - tar xfa libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Ubuntu-12.04:
  image: ubuntu:12.04
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make gcc valgrind
  script:
  - tar xfa libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Ubuntu-14.04:
  image: ubuntu:14.04
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make gcc valgrind
  script:
  - tar xfa libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Ubuntu rolling:
  image: ubuntu:rolling
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq git make gcc valgrind gtk-doc-tools texinfo texlive texlive-plain-generic
  script:
  - tar xfa libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - time ./configure || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
  - make distcheck
  artifacts:
    expire_in: 2 weeks
    paths:
    - libidn-*.tar.gz

Mingw32:
  image: debian:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - dpkg --add-architecture i386
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make mingw-w64 wine wine32 libwine libwine:i386 binfmt-support wine-binfmt
  - update-binfmts --enable wine
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - time ../configure --host=i686-w64-mingw32 CC='i686-w64-mingw32-gcc -static-libgcc' || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Mingw64:
  image: debian:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make mingw-w64 wine wine64 binfmt-support wine-binfmt
  - update-binfmts --enable wine
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - time ../configure --host=x86_64-w64-mingw32 || (cat config.log; exit 1)
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)

Armcross:
  image: debian:latest
  stage: test
  needs: [Debian stable]
  before_script:
  - apt-get update -qq
  - env DEBIAN_FRONTEND=noninteractive apt-get install -y -qq make gcc-arm-linux-gnueabi qemu-user qemu-user-binfmt file
  - update-binfmts --enable qemu-arm
  script:
  - tar xfz libidn-*.tar.gz
  - cd `ls -d libidn-* | grep -v tar.gz`
  - mkdir b
  - cd b
  - ../configure --host=arm-linux-gnueabi CFLAGS="-static --static" || (cat config.log; exit 1)
  - make V=1
  - file src/idn
  - LANG=C.UTF-8 qemu-arm src/idn --debug foo
  - time make check V=1 || (find . -name test-suite.log -exec cat {} +; exit 1)
