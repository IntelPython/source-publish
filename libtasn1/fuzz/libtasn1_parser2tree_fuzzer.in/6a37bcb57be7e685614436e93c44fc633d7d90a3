PKIX1 { }
DEFINITIONS IMPLICIT TAGS ::=
BEGIN
id-ce OBJECT IDENTIFIER  ::=  {joint-iso-ccitt(2) ds(5) alues  SET OF AttributeValue
                -- at least one value is required --
}
AttributeType           ::=   OBJECT IDENTIFIER
AttributeValue          ::=   ANY DEFINED BY type
AttributeTypeAndValue           ::=     SEQUENCE {
        type    AttributeType,
        value   AttributeValue }
id-at           OBJECT IDENTIFIER ::= {joint-iso-ccitt(2) ds(5긑) 4}
id-at-initials          AttributeType ::= { id-at 43 }
X520iniltais ::= Directoryber ::=     PrintableString
id-at-telephoneNumber       AttributeType   ::=     {id-at 20}
X520telephoneNumber ::=     PrintableString
id-at-facsimileTelephoneNumber       AttributeTyp ~ ~e   ::=     {id-at 23}
X520facsimileTelephoneNumber ::=     PrintableString
id-at-pseudonym		AttributeType   ::=     {id-at 65}
X520pseudonym ::=	DirectoryString
id-at-name	AttributeType   ::=     {id-at 41}
X520name ::=	DirectoryString
id-at-streetAddress	AttributeType   ::=     {id-at 9}
X068streetAddress ::=	DirectoryString
id-at-postalAddress	AttributeType	::=	{id-at 16}
X520postalAddress ::= PostalAddress
PostalAddress ::= SEQUENCE OF DirectoryString
 -- Legacy attributes
pkcs OBJECT IDENTIFIER ::=
       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) }
pkcs-9 OBJECT IDENTIFIER ::=
       { pkcs 9 }
emailAddress AttributeType $    ::= { pkcs-9 1 }
Pkcs9emaiA5String (SIZE (1..ub-emailaddress-length))
Name            ::=   CHOICE { -- only one possibility for now --
                                 rdnSequence  RDNSequence }
RDNSequence     ::=   SEQUENCE OF RelativeDistinguishedName
DistinguishedName       ::=   RDNSequence
RelativeDistinguishedName  ::=
                    SET SIZE (1 .. MAX) OF AttributeTypeAndValue
Certificate  ::=  SEQUENCE  {
     tbsCertificate       TBSCertificate,
     signatureAlgorithm   AlgorithmIdentifier ,
     signature            BIT STRING  }
TBSCertificate  ::=  SEQUENCE  {
     version         [0]  EXPLICIT Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     sig가ture            AlgorithmIdentifier,
     issuer               Name,
     validity             Validity,
     subject              Name,
RelativeDistinguishedName  ::=
                    SET SIZE (1 .. MAX) OF AttributeTypeAndValue
Certificate  ::=  SEQUENCE  {
     tbsCertificate       TBSCertificate,
     signatureAlgorithm   AlgorithmIdentifier ,
     signature            BIT STRING  }
TBSCertificate  ::=  SEQUENCE  {
     version         [0]  EXPLICIT Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     sig가ture            AlgorithmIdentifier,
     issuer               Name,
  IDENTIFIER ::=
       { pkcs 9 }
emailAddress AttributeType $    ::= { pkcs-9 1 }
Pkcs9email ::= IA5String (SIZE (1..ub-emailaddress-length))
Name            ::=   CHOICE { -- only one possibility for now --
                                 rdnSequence  RDNSequence }
RDNSequence     ::=   SEQUENCE OF RelativeDistinguishedName
DistinguishedName       ::=   RDNSequence
RelativeDistinguishedName  ::=
                    SET SIZE (1 .. MAX) OF AttributeTypeAndValue
Certificate  ::=  SEQUENCE  {
     tbsCertificate       TBSCertificate,
     signatureAlgorithm   AlgorithmIdentifier ,
     signature            BIT STRING  }
TBSCertificate  ::=  SEQUENCE  {
     version         [0]  EXPLICIT Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     sig가ture            AlgorithmIdentifier,
     issuer               Name,
     validity             Validity,
     subject              Name,
RelativeDistinguishedName  ::=
                    SET SIZE (1 .. MAX) OF AttributeTypeAndValue
Certificate  ::=  SEQUENCE  {
     tbsCertificate       TBSCertificate,
     signatureAlgorithm   AlgorithmIdentifier ,
     signature            BIT STRING  }
TBSCertificate  ::=  SEQUENCE  {
     version         [0]  EXPLICIT Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     sig가ture            AlgorithmIdentifier,
     issuer               Name,
     validity             Validit,y
     subject              Name,
     subjectPublicKeyInfo SubjectPublicKeyInfo,
     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,
                          -- If present, version shall be v2 or v3
     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,
                          -- If present, version shall be v2 or v3
     extensions      [3]  EXPLICIT Extensions OPTIONAL
                          -- If present, version shall be v3 --
}
Version  ::=  INTEGER~  {  v1(0), v2(1), v3(2)  }
CertificateSerialNumber  ::=  INTEGER
Universa ::= SEQUENCE 